name: CD

on:
  schedule:
    - cron: '5 5 * * *'
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name for release"
        required: true
        default: nightly
  push:
    tags:
      - "*"

jobs:
  create-github-release:
    name: Create github release
    runs-on: ubuntu-latest
    steps:
      - name: Create artifacts directory
        run: mkdir artifacts

      - name: Get release version from tag
        if: env.VERSION == '' && github.event_name != 'workflow_dispatch' && github.event_name != 'schedule'
        run: |
          if [[ -n "${{ github.event.inputs.tag_name }}" ]]; then
            echo "Manual run against a tag; overriding actual tag in the environment..."
            echo "VERSION=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi
      - name: Get release version from inputs
        if: env.VERSION == '' && (github.event_name == 'workflow_dispatch' || github.event_name == 'schedule')
        env:
          default_tag_name: nightly
        run: |
            echo "VERSION=${{ github.event.inputs.tag_name || env.default_tag_name }}" >> $GITHUB_ENV
      - name: Validate version environment variable
        run: |
          echo "Version being built against is version ${{ env.VERSION }}"!

      # We need to update the nightly tag every night
      - name: Update nightly tag
        if: env.VERSION == 'nightly'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete nightly --yes || true
          git push origin :nightly
          git tag -d nightly || true
          git tag nightly
          git push origin nightly

      - name: Create GitHub release (tag)
        if: github.event_name != 'workflow_dispatch' && github.event_name != 'schedule'
        id: release_tag
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release (schedule/workflow dispatch)
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        id: release_dispatch
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          name: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save release upload URL to artifact (tag)
        if: github.event_name != 'workflow_dispatch' && github.event_name != 'schedule'
        run: echo "${{ steps.release_tag.outputs.upload_url }}" > artifacts/release-upload-url

      - name: Save release upload URL to artifact (workflow/schedule)
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: echo "${{ steps.release_dispatch.outputs.upload_url }}" > artifacts/release-upload-url

      - name: Save version number to artifact
        run: echo "${{ env.VERSION }}" > artifacts/release-version

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: artifacts
          path: artifacts

  publish:
    name: Publish for ${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    needs: [ create-github-release ]
    strategy:
      matrix:
        job:
          - os: ubuntu-latest
            artifact_name: diffsitter
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: ubuntu-latest
            artifact_name: diffsitter
            target: i686-unknown-linux-gnu
            use-cross: true
          - os: ubuntu-latest
            artifact_name: diffsitter
            target: arm-unknown-linux-gnueabihf
            use-cross: true
          - os: ubuntu-latest
            artifact_name: diffsitter
            target: aarch64-unknown-linux-gnu
            use-cross: true
          - os: macOS-latest
            artifact_name: diffsitter
            target: x86_64-apple-darwin
            use-cross: false
          - os: windows-latest
            artifact_name: diffsitter.exe
            target: x86_64-pc-windows-msvc
            use-cross: false

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build optimized binary
        env:
          MACOS_DEPLOYMENT_TARGET: 10.7
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.job.use-cross }}
          args: --release --locked --target ${{ matrix.job.target }} --features better-build-info,static-grammar-libs
      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.job.target }}-release
      - name: Install packages (Windows)
        if: matrix.job.os == 'windows-latest'
        uses: crazy-max/ghaction-chocolatey@v1.4.0
        with:
          args: install -y zip

      - name: Install packages (macOS)
        if: matrix.job.os == 'macos-latest'
        shell: bash
        run: |
          brew install coreutils

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Get release download URL
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: artifacts

      - name: Set release upload URL and release version
        shell: bash
        run: |
          release_upload_url="$(cat ./artifacts/release-upload-url)"
          echo "RELEASE_UPLOAD_URL=$release_upload_url" >> $GITHUB_ENV
          release_version="$(cat ./artifacts/release-version)"
          echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV

      - name: Archive release assets (Windows)
        id: archive_release_assets_windows
        if: matrix.job.os == 'windows-latest'
        run: |
          cp .\target\${{ matrix.job.target }}\release\${{ matrix.job.artifact_name }} ${{ matrix.job.artifact_name }}
          cp .\bin\git-diffsitter .\git-diffsitter
          zip -r diffsitter-${{ matrix.job.target }}.zip ${{ matrix.job.artifact_name }} git-diffsitter

      - name: Archive release assets
        if: matrix.job.os != 'windows-latest'
        id: archive_release_assets_unix_like
        shell: bash
        run: |
          mkdir -p diffsitter-${{ matrix.job.target }}
          cp target/${{ matrix.job.target }}/release/${{ matrix.job.artifact_name }} diffsitter-${{ matrix.job.target }}
          cp bin/git-diffsitter diffsitter-${{ matrix.job.target }}
          tar -czvf diffsitter-${{ matrix.job.target }}.tar.gz diffsitter-${{ matrix.job.target }}

      - name: Generate SHA256 checksum for binary
        if: matrix.job.os != 'windows-latest'
        id: checksum_archive_unix_like
        shell: bash
        run: |
          sha256sum diffsitter-${{ matrix.job.target }}.tar.gz > diffsitter-${{ matrix.job.target }}.tar.gz.sha256
          checksum=$(cat diffsitter-${{ matrix.job.target }}.tar.gz.sha256)
          echo "CHECKSUM=$checksum"
          echo "CHECKSUM=$checksum" >> $GITHUB_ENV

      - name: Upload binary to release
        if: matrix.job.os != 'windows-latest'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: diffsitter-${{ matrix.job.target }}.tar.gz
          asset_name: diffsitter-${{ matrix.job.target }}.tar.gz
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_content_type: application/octet-stream

      - name: Upload binary to release (Windows)
        if: matrix.job.os == 'windows-latest'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_path: diffsitter-${{ matrix.job.target }}.zip
          asset_name: diffsitter-${{ matrix.job.target }}.zip
          asset_content_type: application/octet-stream

      - name: Upload SHA256 checksum to release
        if: matrix.job.os != 'windows-latest'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: diffsitter-${{ matrix.job.target }}.tar.gz.sha256
          asset_name: diffsitter-${{ matrix.job.target }}.tar.gz.sha256
          asset_content_type: application/octet-stream

      - name: Generate Homebrew file
        if: matrix.job.os == 'macos-latest'
        shell: bash
        run: |
          python deployment/brew_packager.py deployment/macos/homebrew/homebrew_formula.rb.template diffsitter.rb ${{ env.RELEASE_VERSION }} ${{ env.CHECKSUM }}

      - name: Upload Homebrew file to release
        if: matrix.job.os == 'macos-latest'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: diffsitter.rb
          asset_name: diffsitter.rb
          asset_content_type: application/octet-stream

      - name: Build Debian release (x86_64-unknown-linux-gnu)
        if: matrix.job.target == 'x86_64-unknown-linux-gnu'
        run: |
          cargo install cargo-deb --version 1.29.2
          cargo deb
          cp ./target/debian/diffsitter_*.deb ./diffsitter_${{ env.RELEASE_VERSION }}_amd64.deb

      - name: Upload Debian file (x86_64-unknown-linux-gnu)
        if: matrix.job.target == 'x86_64-unknown-linux-gnu'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: diffsitter_${{ env.RELEASE_VERSION }}_amd64.deb
          asset_name: diffsitter_${{ env.RELEASE_VERSION }}_amd64.deb
          asset_content_type: application/octet-stream

      - name: Generate tarball with submodules
        if: matrix.job.target == 'x86_64-unknown-linux-gnu'
        shell: bash
        run: |
          bash deployment/git-archive-all.bash diffsitter_src.tar.gz

      - name: Upload tarball with submodules
        if: matrix.job.target == 'x86_64-unknown-linux-gnu'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: diffsitter_src.tar.gz
          asset_name: diffsitter_src.tar.gz
          asset_content_type: application/octet-stream
